#!/usr/bin/env bash

set -eu

algorithms=(md5 sha{1,224,256,384,512} b2)

me=${0##*/}
usage="Rename files to hashes based on contents.

Usage:
    $me [OPTIONS] ALGORITHM FILE...

Options:
    -f    use -f instead of -i in the generated mv commands

Where ALGORITHM is one of: ${algorithms[*]}
"

usage() {
    printf "%s\n" "$usage"
    exit 0
}

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

extname() {
    awk 'match($0, /(\.[[:alnum:]]+)+$/) { print substr($0, RSTART, RLENGTH) }' <<<"$1"
}

mkbr_options=()

while getopts ":fh" option; do
    case $option in
    f) mkbr_options+=(-f) ;;
    h) usage ;;
    *) die "invalid option -- $OPTARG" ;;
    esac
done && shift $((OPTIND - 1))

if [[ ! -v 1 ]]; then
    die "missing algorithm"
fi

for possible_algorithm in "${algorithms[@]}"; do
    if [[ $possible_algorithm == "$1" ]]; then
        algorithm=$possible_algorithm
        shift
        break
    fi
done

if [[ ! -v algorithm ]]; then
    die "invalid digest algorithm -- $1"
fi

temp_dir=$(mktemp -d -t "${me}.XXXXXXXXXX")
printf -v cleanup "rm -r %q" "$temp_dir"
trap '$cleanup' EXIT

src_list=$temp_dir/src
dst_list=$temp_dir/dst

if (($# == 0)); then
    cat >"$src_list"
else
    printf "%s\n" "$@" >"$src_list"
fi

while read -r src; do
    [[ -f $src && -r $src ]] || continue

    dir=$(dirname "$src")
    ext=$(extname "$src")
    base=$("$algorithm"sum "$src" | awk '{print $1}')
    dst=$dir/$base$ext

    printf "%s\n" "$dst" >>"$dst_list"
done <"$src_list"

mkbr "${mkbr_options[@]}" "$src_list" "$dst_list"

#!/usr/bin/env bash

# Print a list of timestamps spanning the two given timestamps.
# Usage: daterange START END INCREMENT [ARG...]

# The start/end timestamp and increment parameters can be any string that
# `date` recognizes as a time specification:

# Get every day in 2001:
# daterange 2001-01-01 2001-12-31 "+1 day"

# All arguments after the increment parameter are passed on to
# `date`, so you can control how the output is formatted:

# Get every UTC minute in the next hour in ISO-8601 format:
# daterange now "now +1 hour" "+1 minute" --utc --iso-8601=minute

set -euo pipefail

if [[ ! -v 1 ]]; then
    printf "The first argument must be the starting timestamp\n" >&2
    exit 1
fi

timestamp_start=$1

if [[ ! -v 2 ]]; then
    printf "The second argument must be the ending timestamp\n" >&2
    exit 1
fi

timestamp_end=$2

if [[ ! -v 3 ]]; then
    printf "The third argument must be an increment\n" >&2
    printf "See date(1) for more details\n" >&2
    exit 1
fi

increment=$3

shift 3

normalize_timestamp() {
    date --utc --iso-8601=ns --date="$1"
}

timestamp_current=$(normalize_timestamp "$timestamp_start")
timestamp_end=$(normalize_timestamp "$timestamp_end")

while (($(datecmp "$timestamp_current" "$timestamp_end") < 1)); do
    date --date="$timestamp_current" "$@"
    timestamp_current=$(normalize_timestamp "$timestamp_current $increment")
done

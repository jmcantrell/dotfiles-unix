#!/usr/bin/env bash

# Initialize a Deno prefix.
# Usage: enable-deno [VERSION]

set -euo pipefail

REPO_URL=https://github.com/denoland/deno

versions_file=$(mktemp -t "${0##*/}".XXXXXXXXXX)
printf -v cleanup "rm %q" "$versions_file"
trap '$cleanup' EXIT

git ls-remote --tags --refs "$REPO_URL" |
    sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
    sort -r --version-sort >"$versions_file"

if [[ ! -v 1 ]]; then
    version=$(grep -vi -m1 '[a-z]' "$versions_file")
elif ! grep -q "^$1$" "$versions_file"; then
    printf "Invalid version: %s\n" "$1" >&2
    exit 1
else
    version=$1
fi

tag=v$version

prefix=${XDG_DATA_HOME:-$HOME/.local/share}/deno/$version
archive_file=${XDG_CACHE_HOME:-$HOME/.cache}/deno/deno-$version.zip

kernel=$(uname --kernel-name)
machine=$(uname --machine)

case $kernel in
Darwin) kernel=apple-darwin ;;
Linux) kernel=unknown-linux-gnu ;;
esac

case $machine in
arm*) machine=${machine/arm/aarch} ;;
esac

target=$machine-$kernel

if [[ ! -f $archive_file ]]; then
    archive_url=$REPO_URL/releases/download/$tag/deno-$target.zip
    printf "Downloading Deno v%s: %s\n" "$version" "$archive_url"
    mkdir -p "$(dirname "$archive_file")"
    curl -L -o "$archive_file" "$archive_url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

mkdir -p "$prefix"/bin
unzip -d "$prefix"/bin -o "$archive_file"

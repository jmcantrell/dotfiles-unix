#!/usr/bin/env bash

# Initialize a Python prefix.
# Usage: init-python [VERSION]

set -eu

REPO_URL=https://github.com/denoland/deno

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

versions() {
    git ls-remote --tags --refs "$REPO_URL" |
        sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
        sort --version-sort
}

latest_version() {
    versions | grep -vi '[a-z][0-9]$' | tail -n1
}

version=${1:-$(latest_version)}
prefix=${XDG_DATA_HOME:-$HOME/.local/share}/deno/$version
archive=${XDG_CACHE_HOME:-$HOME/.cache}/deno/deno-$version.zip

kernel=$(uname --kernel-name)
machine=$(uname --machine)

case $kernel in
Darwin) kernel=apple-darwin ;;
Linux) kernel=unknown-linux-gnu ;;
esac

case $machine in
arm*) machine=${machine/arm/aarch} ;;
esac

target=$machine-$kernel

if [[ ! -f $archive ]]; then
    mkdir -p "$(dirname "$archive")"
    url=$REPO_URL/releases/download/v$version/deno-$target.zip
    curl -L --progress-bar -o "$archive" "$url" || die "unable to download archive -- $url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

temp_dir=$(mktemp -d -t "${0##*/}.XXXXXXXXXX")
printf -v cleanup "rm -r %q" "$temp_dir"
trap '$cleanup' EXIT

cd "$temp_dir"
mkdir -p "$prefix"/bin
unzip -d "$prefix"/bin -o "$archive"

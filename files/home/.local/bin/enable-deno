#!/usr/bin/env bash

# Initialize a Deno prefix.
# Usage: enable-deno [VERSION]

set -euo pipefail

REPO=denoland/deno
KERNEL=$(uname --kernel-name)
MACHINE=$(uname --machine)

if [[ -v 1 ]]; then
    release_selector=tags/v$1
else
    release_selector=latest
fi

release_json=$(curl -sSL "https://api.github.com/repos/$REPO/releases/$release_selector")

if ! tag=$(jq -er .tag_name <<<"$release_json"); then
    printf "No release found\n" >&2
    exit 1
fi

version=${tag#v}

prefix=${XDG_DATA_HOME:-$HOME/.local/share}/deno/$version
archive_file=${XDG_CACHE_HOME:-$HOME/.cache}/deno/deno-$version.zip

if [[ ! -f $archive_file ]]; then
    case $KERNEL in
    Darwin) kernel=apple-darwin ;;
    Linux) kernel=unknown-linux-gnu ;;
    esac

    case $MACHINE in
    arm*) machine=${MACHINE/arm/aarch} ;;
    esac

    target=$machine-$kernel
    archive_url=$(jq -er --arg name "deno-$target.zip" '.assets[] | select(.name == $name) | .browser_download_url' <<<"$release_json")

    printf "Downloading Deno v%s: %s\n" "$version" "$archive_url"
    mkdir -p "$(dirname "$archive_file")"
    curl -L -o "$archive_file" "$archive_url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

mkdir -p "$prefix"/bin
unzip -d "$prefix"/bin -o "$archive_file"

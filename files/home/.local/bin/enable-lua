#!/usr/bin/env bash

set -euo pipefail

archives_dir=${LUA_ARCHIVES:-${XDG_CACHE_HOME:-$HOME/.cache}/lua}
versions_dir=${LUA_VERSIONS:-${XDG_DATA_HOME:-$HOME/.local/share}/lua}
packages_file=${LUA_PACKAGES:-${XDG_CONFIG_HOME:-$HOME/.config}/lua/packages}

usage="Install a version of Lua.

Usage:
    ${0##*/} [OPTIONS] [VERSION]

Options:
    -h                 show this help message and exit

    -d                 set the requested version as the default

    -D DIRECTORY       store versions in DIRECTORY
                       (default: ${versions_dir@Q})

    -A DIRECTORY       store archives in DIRECTORY
                       (default: ${archives_dir@Q})

    -P FILE            install packages listed in FILE
                       (default: ${packages_file@Q})

Arguments:
    VERSION            install VERSION
                       (e.g. '3.10.8', 'latest', or 'system')

Environment:
    LUA_VERSIONS    store versions in this directory (same as -D
    LUA_ARCHIVES    store archives in this directory (same as -A)
    LUA_PACKAGES    install packages listed in this file (same as -P)"

set_as_default=0

while getopts ":dD:A:P:h" option; do
    case $option in
    d) set_as_default=1 ;;
    D) versions_dir=$OPTARG ;;
    A) archives_dir=$OPTARG ;;
    P) packages_file=$OPTARG ;;
    h)
        printf "%s\n" "$usage"
        exit 0
        ;;
    *)
        printf "Invalid option: %s\n" "$OPTARG" >&2
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

repo=lua/lua

temp_dir=$(mktemp -d -t "${0##*/}".XXXXXXXXXX)
printf -v cleanup "rm -rf %q" "$temp_dir"
trap '$cleanup' EXIT

versions_file=$temp_dir/versions
git ls-remote --tags --refs "https://github.com/$repo" |
    sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
    sort -r --version-sort >"$versions_file"

version=${1:-latest}

case $version in
system) version=$(/usr/bin/lua -v | cut -d' ' -f2) ;;
latest) version=$(grep -v -m1 '[^0-9.]' "$versions_file") ;;
*)
    if ! grep -q "^$version$" "$versions_file"; then
        printf "Invalid version: %s\n" "$version" >&2
        exit 1
    fi
    ;;
esac

version_dir=$versions_dir/$version
archive_file=$archives_dir/lua-$version.tar.gz

if [[ ! -f $archive_file ]]; then
    archive_url=http://lua.org/ftp/lua-$version.tar.gz
    printf "Downloading Lua v%s: %s\n" "$version" "$archive_url"
    mkdir -p "$(dirname "$archive_file")"
    curl -L -o "$archive_file" "$archive_url"
fi

if [[ ! -d $version_dir ]]; then
    cd "$temp_dir"

    tar -xf "$archive_file" --strip-components=1

    sed -i "/^INSTALL_TOP=/s:=.*:= ${version_dir//:/\\:}:" Makefile

    make --jobs="$(nproc)"
    make install

    enable-luarocks "$version_dir"

    export PATH=$version_dir/bin:$PATH

    if [[ -f $packages_file ]]; then
        while read -r package; do
            luarocks install "$package"
        done
    fi

    printf "Lua v%s is now installed at: %q\n" "$version" "$version_dir"
else
    printf "Lua v%s is already installed at: %q\n" "$version" "$version_dir"
fi

if ((set_as_default)); then
    ln -vsfn "$version_dir" "$versions_dir"/default
fi

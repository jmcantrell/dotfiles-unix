#!/usr/bin/env bash

# Initialize a Spigot-enabled Mincraft server for the given version.
# Usage: enable-minecraft-spigot-server [VERSION]

set -euo pipefail

temp_dir=$(mktemp -d -t "${0##*/}".XXXXXXXXXX)
printf -v cleanup "rm -vr %q" "$temp_dir"
trap '$cleanup' EXIT

versions_file=$temp_dir/versions.json
curl -sSL -o "$versions_file" https://launchermeta.mojang.com/mc/game/version_manifest.json

version=${1:-$(jq -er .latest.release "$versions_file")}

if ! jq -er --arg version "$version" '.versions[] | select(.id == $version)' "$versions_file" >/dev/null; then
    printf "Invalid version: %s\n" "$version" >&2
    exit 1
fi

version_dir=${XDG_DATA_HOME:-$HOME/.local/share}/mincraft-spigot-server/$version

if [[ -d $version_dir ]]; then
    exit 0
fi

temp_version_dir=$temp_dir/version
mkdir -p "$temp_version_dir"

pushd "$temp_version_dir"

printf "Downloading Spigot build tools\n"
curl -L -O https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar

java -jar BuildTools.jar --rev "$version"
output_file=$(grep -m1 "Saved as" BuildTools.log.txt | sed 's:^.* \.\/\(.*\)$:\1:')
ln -vsfn "$output_file" server.jar
printf "eula=true\n" >eula.txt

popd

mkdir -p "$(dirname "$version_dir")"
mv -v "$temp_version_dir" "$version_dir"

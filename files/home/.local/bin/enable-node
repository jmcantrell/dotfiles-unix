#!/usr/bin/env bash

# Initialize a Node.js prefix.
# Usage: enable-node [VERSION]

set -euo pipefail

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

REPO=nodejs/node

temp_dir=$(mktemp -d -t "${0##*/}.XXXXXXXXXX")
printf -v cleanup "rm -r %q" "$temp_dir"
trap '$cleanup' EXIT

releases_file=$temp_dir/releases.json

curl -sSL -o "$releases_file" \
    "https://api.github.com/repos/$REPO/releases"

if [[ -v 1 ]]; then
    release_json=$(jq -er --arg version "$1" 'map(select(.tag_name == "v" + $version)) | first' "$releases_file") || die "version not found: $1"
else
    release_json=$(jq -r '.[0]' "$releases_file")
fi

tag=$(jq -r '.tag_name' <<<"$release_json")
version=${tag#v}

prefix=${XDG_DATA_HOME:-$HOME/.local/share}/node/$version
archive=${XDG_CACHE_HOME:-$HOME/.cache}/node/node-$version.tar.xz

kernel=$(uname --kernel-name)
kernel=${kernel,,}
machine=$(uname --machine)
machine=${machine/#x86_/x}

if [[ ! -f $archive ]]; then
    printf "Downloading Node.js v%s\n" "$version" >&2
    mkdir -p "$(dirname "$archive")"
    url=https://nodejs.org/dist/$tag/node-$tag-$kernel-$machine.tar.xz
    curl -L --progress-bar -o "$archive" "$url" || die "unable to download archive -- $url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

cd "$temp_dir"
tar -xf "$archive"
mkdir -p "$(dirname "$prefix")"
mv "node-v${version}-${kernel}-${machine}" "$prefix"

export PATH=$prefix/bin:$PATH

npm install --global npm

packages_file=${NODE_DEFAULT_PACKAGES:-$HOME/.default-node-packages}

if [[ -f $packages_file ]]; then
    xargs -r npm install --global <"$packages_file"
fi

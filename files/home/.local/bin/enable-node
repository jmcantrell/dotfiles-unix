#!/usr/bin/env bash

# Initialize a Node.js prefix.
# Usage: enable-node [VERSION]

set -euo pipefail

REPO_URL=https://github.com/nodejs/node

versions_file=$(mktemp -t "${0##*/}".XXXXXXXXXX)
printf -v cleanup "rm %q" "$versions_file"
trap '$cleanup' EXIT

git ls-remote --tags --refs "$REPO_URL" |
    sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
    sort -r --version-sort >"$versions_file"

version=${1:-$(grep -vi -m1 '[a-z]' "$versions_file")}

if ! grep -q "^$version$" "$versions_file"; then
    printf "Invalid version: %s\n" "$version" >&2
    exit 1
fi

tag=v$version

prefix=${XDG_DATA_HOME:-$HOME/.local/share}/node/$version
archive_file=${XDG_CACHE_HOME:-$HOME/.cache}/node/node-$version.tar.xz

kernel=$(uname --kernel-name)
kernel=${kernel,,}
machine=$(uname --machine)
machine=${machine/#x86_/x}

if [[ ! -f $archive_file ]]; then
    archive_url=https://nodejs.org/dist/$tag/node-$tag-$kernel-$machine.tar.xz
    printf "Downloading Node.js v%s: %s\n" "$version" "$archive_url"
    mkdir -p "$(dirname "$archive_file")"
    curl -L -o "$archive_file" "$archive_url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

mkdir -p "$prefix"
tar -vxf "$archive_file" -C "$prefix" --strip-components=1

export PATH=$prefix/bin:$PATH

npm install --global npm

packages_file=${NODE_DEFAULT_PACKAGES:-$HOME/.default-node-packages}

if [[ -f $packages_file ]]; then
    xargs -r npm install --global <"$packages_file"
fi

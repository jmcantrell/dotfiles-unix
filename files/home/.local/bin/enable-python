#!/usr/bin/env bash

# Initialize a Python prefix.
# Usage: init-python [VERSION]

set -eu

REPO_URL=https://github.com/python/cpython

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

versions() {
    git ls-remote --tags --refs "$REPO_URL" |
        sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
        sort --version-sort
}

latest_version() {
    versions | grep -vi '[a-z][0-9]$' | tail -n1
}

version=${1:-$(latest_version)}
prefix=${XDG_DATA_HOME:-$HOME/.local/share}/python/$version
archive=${XDG_CACHE_HOME:-$HOME/.cache}/python/python-$version.tar.gz

if [[ ! -f $archive ]]; then
    mkdir -p "$(dirname "$archive")"
    url=$REPO_URL/archive/refs/tags/v${version}.tar.gz
    curl -L --progress-bar -o "$archive" "$url" || die "unable to download archive -- $url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

temp_dir=$(mktemp -d -t "${0##*/}.XXXXXXXXXX")
trap 'rm -rf ${temp_dir@Q}' EXIT

cd "$temp_dir"
tar -xf "$archive"
cd cpython-"$version"

./configure --prefix="$prefix" --enable-optimizations
make --jobs="$(nproc)" install

export PATH=$prefix/bin:$PATH

major=${version%%.*}

for name in pip idle pydoc python; do
    ln -sfn "$prefix/bin/$name$major" "$prefix/bin/$name"
done

ln -sfn "$prefix/bin/python$major"-config "$prefix"/bin/python-config

pip install --upgrade pip

packages_file=${PYTHON_DEFAULT_PACKAGES:-$HOME/.default-python-packages}

if [[ -f $packages_file ]]; then
    xargs -r pip install --upgrade <"$packages_file"
fi

#!/usr/bin/env bash

set -euo pipefail
shopt -s nullglob globstar

usage="Find files matching a given mime type.

Usage:
    ${0##*/} [OPTIONS] PATTERN [PATH...]

Options:
    -h         show this help text and exit
    -r         recurse into directories
    -L         dereference symlinks before getting mime type
    -f FILE    read files to test from FILE
    -z         separate results with a null instead of a newline

Arguments:
    PATTERN    only output files whose mime-type matches the regular expression PATTERN
    PATH       test PATH (or all files under PATH) against PATTERN (default: '.')"

recursive=0
file_options=()
result_sep='\n'

while getopts ":rzLf:h" option; do
    case $option in
    r) recursive=1 ;;
    L) file_options+=(-L) ;;
    f) test_files+=("$OPTARG") ;;
    z) result_sep='\0' ;;
    h)
        printf "%s\n" "$usage"
        exit 0
        ;;
    :)
        printf "Option missing argument: %s\n" "$OPTARG" >&2
        exit 1
        ;;
    *)
        printf "Invalid option: %s\n" "$OPTARG" >&2
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

desired_mime_type=${1:?missing mime type}
shift

output_if_match() {
    local file=$1 this_mime_type
    this_mime_type=$(file --brief --mime-type "${file_options[@]}" "$file")

    if [[ $this_mime_type =~ $desired_mime_type ]]; then
        printf "%s$result_sep" "$file"
    fi
}

for root in "${@:-$PWD}"; do
    output_if_match "$root"
    if [[ -d $root ]] && ((recursive)); then
        for path in "$root"/**; do
            output_if_match "$path"
        done
    fi
done

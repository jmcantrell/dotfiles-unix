#!/usr/bin/env bash

# Initialize a Node.js prefix.
# Usage: init-node VERSION [DIRECTORY]

set -eu

REPO_URL=https://github.com/nodejs/node

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

versions() {
    git ls-remote --tags --refs "$REPO_URL" |
        sed -n "s:^.*refs/tags/v\(\S*\).*$:\1:p" |
        sort --version-sort
}

latest_version() {
    versions | grep -vi '[a-z][0-9]$' | tail -n1
}

version=${1:-$(latest_version)}
prefix=${XDG_DATA_HOME:-$HOME/.local/share}/node/$version
archive=${XDG_CACHE_HOME:-$HOME/.cache}/node/node-$version.tar.gz

kernel=$(uname --kernel-name)
kernel=${kernel,,}
machine=$(uname --machine)
machine=${machine/#x86_/x}

if [[ ! -f $archive ]]; then
    mkdir -p "$(dirname "$archive")"
    url=https://nodejs.org/dist/v$version/node-v$version-$kernel-$machine.tar.xz
    curl -L -o "$archive" "$url" || die "unable to download archive -- $url"
fi

if [[ -d $prefix ]]; then
    exit 0
fi

temp_dir=$(mktemp -d -t "${0##*/}.XXXXXXXXXX")
printf -v cleanup "rm -rf %q" "$temp_dir"
trap "$cleanup" INT TERM EXIT

cd "$temp_dir"
tar -xf "$archive"
mkdir -p "$(dirname "$prefix")"
mv "node-v${version}-${kernel}-${machine}" "$prefix"

export PATH=$prefix/bin:$PATH

npm install --global npm

packages_file=${NODE_DEFAULT_PACKAGES:-$HOME/.default-node-packages}

if [[ -f $packages_file ]]; then
    xargs -r npm install --global <"$packages_file"
fi

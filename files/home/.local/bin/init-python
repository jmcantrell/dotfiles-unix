#!/usr/bin/env bash

# Initialize a Python prefix.
# Usage: init-python VERSION [DIRECTORY]

set -eu

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$1" >&2
    exit "${2:-1}"
}

version=${1:?missing version}
prefix=${2:-${XDG_DATA_HOME:-$HOME/.local/share}/python/$version}
archive=${XDG_CACHE_HOME:-$HOME/.cache}/python/python-$version.tar.gz

if [[ ! -f $archive ]]; then
    mkdir -p "$(dirname "$archive")"
    url=https://github.com/python/cpython/archive/refs/tags/v${version}.tar.gz
    curl -L -o "$archive" "$url" || die "unable to download archive -- $url"
fi

if [[ ! -d $prefix ]]; then
    temp_dir=$(mktemp -d -t "${0##*/}.XXXXXXXXXX")
    printf -v cleanup "rm -rf %q" "$temp_dir"
    trap "$cleanup" INT TERM EXIT

    cd "$temp_dir"
    tar -xf "$archive"
    cd cpython-"$version"

    ./configure --prefix="$prefix" --enable-optimizations
    num_cpus=$(grep -c "^processor\b" /proc/cpuinfo)
    make --jobs="$num_cpus" install
fi

export PATH=$prefix/bin:$PATH

major=${version%%.*}

for name in pip idle pydoc python; do
    ln -sfn "$prefix/bin/$name$major" "$prefix/bin/$name"
done

ln -sfn "$prefix/bin/python$major"-config "$prefix"/bin/python-config

pip install --upgrade pip

packages_file=${PYTHON_DEFAULT_PACKAGES:-$HOME/.default-python-packages}

if [[ -f $packages_file ]]; then
    xargs -r pip install --upgrade <"$packages_file"
fi

#!/usr/bin/env bash

set -euo pipefail

ostype=${ostype:-Linux_64}
memory=${memory:-4}
size=${size:-20}
cpus=${cpus:-2}
firmware=${firmware:-bios}

usage="Create a new VirtualBox guest.

Usage:
    ${0##*/} [OPTIONS] NAME ISO_FILE

Options:
    -h           show this help text and exit

    -o TYPE      specify operating system type
                 (default: $ostype)

    -m SIZE      specify memory size in gigabytes
                 (default: $memory)

    -s SIZE      specify main drive size in gigabytes
                 (default: $size)

    -c NUMBER    specify number of CPUs
                 (default: $cpus)

    -f TYPE      specify boot firmware type
                 (default: $firmware)"

while getopts ":o:m:s:c:f:h" option; do
    case $option in
    o) ostype=$OPTARG ;;
    m) memory=$OPTARG ;;
    s) size=$OPTARG ;;
    c) cpus=$OPTARG ;;
    f) firmware=$OPTARG ;;
    h)
        printf "%s\n" "$usage"
        exit 0
        ;;
    *)
        printf "Invalid option: %s\n" "$OPTARG" >&2
        exit 1
        ;;
    esac
done && shift $((OPTIND - 1))

if [[ ! -v 1 ]]; then
    printf "The first argument must be a machine name\n" >&2
    exit 1
fi

name=$1

if [[ ! -v 2 ]]; then
    printf "The second argument must be an ISO file\n" >&2
    exit 1
fi

iso_file=$2

vmsdir=$(
    VBoxManage list systemproperties |
        grep '^Default machine folder:' | cut -d: -f2 |
        sed 's/^[[:space:]]\+//;s/[[:space:]]\+$//'
)

bridgedif=$(
    VBoxManage list bridgedifs |
        grep "^Name:" | head -n1 |
        sed 's/^Name: *\(.*\)$/\1/'
)

VBoxManage createvm \
    --name "$name" --ostype "$ostype" --register

VBoxManage modifyvm "$name" \
    --memory $((memory * 1024)) --clipboard bidirectional \
    --boot1 dvd --boot2 disk --boot3 none --boot4 none \
    --ioapic on --firmware "$firmware" --rtcuseutc on \
    --cpus "$cpus" --pae on --hwvirtex on \
    --paravirtprovider kvm --nestedpaging on --largepages on \
    --vram 128 --graphicscontroller vmsvga --accelerate3d on \
    --audiocontroller hda --audioin on --audioout on \
    --nic1 bridged --bridgeadapter1 "$bridgedif" \
    --defaultfrontend headless

vdi_file=$vmsdir/$name.vdi

VBoxManage createhd \
    --filename "$vdi_file" --size $((size * 1024))

VBoxManage storagectl "$name" \
    --name "SATA Controller" \
    --add sata --controller IntelAHCI

VBoxManage storageattach "$name" \
    --storagectl "SATA Controller" \
    --port 0 --device 0 --type hdd \
    --medium "$vdi_file"

VBoxManage storagectl "$name" \
    --name "IDE Controller" --add ide

VBoxManage storageattach "$name" \
    --storagectl "IDE Controller" \
    --port 0 --device 0 --type dvddrive \
    --medium "$iso_file"

VBoxManage snapshot "$name" take live

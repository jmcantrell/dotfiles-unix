#!/usr/bin/env bash

set -eu

config_dir=${XDG_CONFIG_HOME:-$HOME/.config}/snip

me=${0##*/}
usage="Manage text snippets.

Usage:
    $me [OPTIONS] ACTION [NAME]

Options:
    -C DIRECTORY    directory in which to store snippets
                    (default: $config_dir)

Arguments:
    ACTION          perform action on snippet
    NAME            snippet on which to perform action

Actions:
    list            print snippet names to stdout
    path            print snippet path to stdout
    read            dump snippet to stdout
    write           create snippet from stdin
    edit            open snippet in editor
    delete          delete snippet
"

usage() {
    printf "%s\n" "$usage"
    exit 0
}

die() {
    printf "%s: line %s: %s\n" "$0" "${BASH_LINENO[0]}" "$*" >&2
    exit 1
}

snippet_file() {
    printf "%s/%s" "$config_dir" "${1:?Missing snippet name}"
}

snippet_file_required() {
    local file
    file=$(snippet_file "$1")

    if [[ ! -f $file ]]; then
        die "snippet file does not exist: $file"
    fi

    printf "%s\n" "$file"
}

do_list() {
    if [[ -d $config_dir ]]; then
        find "$config_dir" -type f -printf "%P\n"
    fi
}

do_path() {
    snippet_file "$1"
}

do_write() {
    local file
    file=$(snippet_file "$1")
    mkdir -p "$(dirname "$file")"
    cat >"$file"
}

do_read() {
    local file
    file=$(snippet_file_required "$1")
    cat "$file"
}

do_edit() {
    exec ${EDITOR:-vim} "$(snippet_file "$1")"
}

do_delete() {
    local file
    file=$(snippet_file_required "$1")
    rm -f "$file"
}

while getopts ":C:h" option; do
    case $option in
    C) config_dir=$OPTARG ;;
    h) usage ;;
    *) die "invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

action=${1:?missing action}
shift

case $action in
list | path | read | write | edit | delete) ;;
*) die "invalid action '$action'" ;;
esac

if [[ $action == list ]]; then
    do_list
    exit 0
fi

snippet_name=${1:?missing snippet name}
shift

do_"$action" "$snippet_name"

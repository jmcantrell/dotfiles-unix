#!/usr/bin/env bash

set -e

me=${0##*/}
usage="Manage file downloads.
Usage: $me [options] [URI...]

Options:
    -h         Display help.
    -H HOOK    Run hook named HOOK

Examples:
    Download file (or add to existing session):
        $me https://domain.net/path/to/file

    Resume download session (if canceled):
        $me
"

target=$1
token=$USER@$HOSTNAME

if which xdg-user-dir &>/dev/null; then
    dest=$(xdg-user-dir DOWNLOAD)
else
    dest=$HOME/Downloads
fi

data_dir=${XDG_DATA_HOME:-$HOME/.local/share}/aria2
session=$data_dir/session

hook_complete() {
    # local gid=$1
    # local num_files=$2
    local file=${3:?missing file}

    if [[ -f $file ]]; then
        echo "ERROR: file '$file' does not exist" >&2
        exit 1
    fi

    mv "$file" "$dest"
    notify-download "$file"
}

add_uris() {
    local target=${1:?missing download target}

    curl -X POST \
        -H 'Content-Type: application/json' \
        -d "{\"jsonrpc\":\"2.0\", \"id\":\"qwer\", \"method\":\"aria2.addUri\", \"params\":[\"token:$token\", [\"$target\"]]}" \
        http://localhost:6800/jsonrpc >&2
}

start_session() {
    mkdir -p "$data_dir"
    cd "$data_dir"

    local options=(
        --dir="$data_dir"
        --save-session="$session"
        --enable-rpc --rpc-secret="$token"
        --follow-torrent=mem
        --follow-metalink=mem
    )

    if [[ -f "$session" ]]; then
        options+=(--input-file="$session")
    fi

    if [[ $concurrent ]]; then
        options+=(--max-concurrent-downloads="$concurrent")
    fi

    if [[ $TORRENT_PORT ]]; then
        options+=(--listen-port="$TORRENT_PORT")
    fi

    exec aria2c "${options[@]}" "$@"
}

unset OPTIND concurrent
while getopts ":hH:j:" option; do
    case $option in
        j) concurrent=$OPTARG ;;
        H) hook_"${OPTARG}" "$@"; exit 0 ;;
        h) echo "$usage" >&2; exit 0 ;;
        *) echo "$usage" >&2; exit 1 ;;
    esac
done && shift $((OPTIND - 1))

if pgrep aria2c &>/dev/null; then
    add_uris "$@"
else
    start_session "$@"
fi

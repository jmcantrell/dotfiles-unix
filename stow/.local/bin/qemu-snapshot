#!/usr/bin/env sh

# Create a snapshot of a disk image.
# Usage: qemu-snapshot <name> [base image name]

name=${1:?missing system name}
base=$2  # name_yyyy-mm-dd_HH-MM-SS

images=$HOME/.qemu
image=$images/$name.cow
snapshots=$images/snapshots
size=${size:-50G}
format=qcow2

fstype() {
    local fstype
    local here=${1:-$PWD}
    # starting at $here, look for the closes mount point,
    # and if found, return the filesystem type
    while ! test "$fstype"; do
        fstype=`mount | grep " $here " | cut -d' ' -f5`
        here=`dirname "$here"`
    done
    echo "$fstype"
}

snapshot_names() {
    find "$snapshots" -name "${name}_*" |
    while read -r snapshot; do
        echo "`basename "$snapshot"`"
    done
}

mkdir -p "$images"

# disable btrfs copy-on-write for vm dir
test `fstype "$images"` = btrfs && chattr +C "$images"

# if the string "menu" is given as the base,
# then use a menu to select the base image
if test "$base" = menu; then
    echo "Base snapshot on which image?" >&2
    select snapshot in `snapshot_names`; do
        base=$snapshots/$snapshot
        break
    done
fi

# if no base image given, use the current one
if ! test "$base" && test -f "$image"; then
    base=`realpath "$image"`
fi

# if some base was given,
# but it's not a file, try to build it
if test "$base" && ! test -f "$base"; then
    base=$snapshots/${base%%.cow}.cow
fi

if test "$base" && ! test -f "$base"; then
    echo "Image $base does not exist" >&2
    exit 1
fi

mkdir -p "$snapshots"

ts=`date +%Y-%m-%d_%H-%M-%S`
snapshot=$snapshots/${name}_${ts}.cow

if test "$base"; then
    qemu-img create -f "$format" \
        -o "backing_file=$base,backing_fmt=$format" \
        "$snapshot"
else
    # initial image creation
    qemu-img create -f "$format" "$snapshot" "$size"
fi

ln -sfvT "$snapshot" "$image"

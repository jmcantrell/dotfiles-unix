#!/usr/bin/env bash

set -eu
shopt -s nullglob

cache_dir=${XDG_CACHE_HOME:-$HOME/.cache}/yank

name=${0##*/}
usage="Move text around using file-based registers.

Usage:
    $name [OPTIONS] ACTION

Options:
    -R              perform action on all existing registers
    -r NAME         perform action on register (can use multiple times)

    -C DIRECTORY    directory in which to store registers
                    (default: $cache_dir)

Arguments:
    ACTION          perform action on lines of a register

Actions:
    list            print register names to stdout
    set             set register contents from stdin
    add             add lines from stdin to register
    edit            open register in editor
    print           print register to stdout
    clear           clear register contents

If no register is specified, it defaults to 'default'.
When operating on all registers with -R, 'default' will be included.
"

die() {
    echo "ERROR: $*" >&2
    exit 1
}

do_add() {
    mkdir -p "$cache_dir"
    tee -a "${register_files[@]}" >/dev/null
}

do_set() {
    do_clear
    do_add
}

do_edit() {
    exec "${VISUAL:-$EDITOR}" "${register_files[@]}"
}

do_list() {
    if [[ -d $cache_dir ]]; then
        find "$cache_dir" -type f -printf "%f\n"
    fi
}

do_print() {
    local register_file
    for register_file in "${register_files[@]}"; do
        if [[ -r $register_file ]]; then
            cat "$register_file"
        fi
    done
}

do_clear() {
    rm -f "${register_files[@]}"
}

declare -A register_files_seen=()

while getopts ":r:RC:h" option; do
    case $option in
    R)
        for register_file in "$cache_dir"/default "$cache_dir"/*; do
            register_files_seen[$register_file]=1
        done
        ;;
    r)
        register_file=$cache_dir/$OPTARG
        register_files_seen[$register_file]=1
        ;;
    C) cache_dir=$OPTARG ;;
    h)
        echo "$usage"
        exit
        ;;
    *) die "Invalid option '$OPTARG'" ;;
    esac
done && shift $((OPTIND - 1))

register_files=("${!register_files_seen[@]}")

if ((${#register_files[@]} == 0)); then
    register_files=("$cache_dir"/default)
fi

action=${1:-set}

case $action in
add | set | edit | list | print | clear) ;;
*) die "Invalid action '$action'" ;;
esac

do_"$action"

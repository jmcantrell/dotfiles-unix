# vim key bindings
setopt vi

# tab key will generate ctrl-i
bindkey '^i' complete-word     # complete as much as possible
# bindkey '^i' menu-complete   # complete first match
bindkey '^o' reverse-menu-complete

# history search forward/backward
bindkey '^f' history-incremental-search-forward
bindkey '^b' history-incremental-search-backward

# default history search
bindkey '^r' history-incremental-search-backward

bindkey '^n' down-history
bindkey '^p' up-history

# edit the command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey "^e" edit-command-line
bindkey -M vicmd "^e" edit-command-line

# save input until next command
bindkey '^z' push-input

autoload -U copy-earlier-word
zle -N copy-earlier-word
bindkey '^a' copy-earlier-word

bindkey '^y' yank
bindkey '^k' kill-line
bindkey '^u' backward-kill-line

# more intuitive word boundaries for kill-word
WORDCHARS=${WORDCHARS:s#/#}
WORDCHARS=${WORDCHARS:s/./}
WORDCHARS=${WORDCHARS:s/-/}
WORDCHARS=${WORDCHARS:s/_/}

bindkey '^x' kill-word
bindkey '^w' backward-kill-word

bindkey ' ' magic-space
bindkey -M vicmd 'u' undo
bindkey -M vicmd '/' history-incremental-search-backward
bindkey -M vicmd '?' history-incremental-search-forward

bindkey $terminfo[khome] beginning-of-line
bindkey $terminfo[kend]  end-of-line

bindkey -M vicmd 'H' beginning-of-line
bindkey -M vicmd 'L' end-of-line

bindkey $terminfo[kich1] overwrite-mode
bindkey $terminfo[kdch1] delete-char

# bindkey $terminfo[kcuu1] up-line-or-history
# bindkey $terminfo[kcud1] down-line-or-history

# history search similar to bash (cursor stays in place)
# autoload -U history-search
# bindkey $terminfo[kcuu1] history-beginning-search-backward
# bindkey $terminfo[kcud1] history-beginning-search-forward

# history search (cursor placed at end of line)
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey $terminfo[kcuu1] history-beginning-search-backward-end
bindkey $terminfo[kcud1] history-beginning-search-forward-end

bindkey $terminfo[kcub1] backward-char
bindkey $terminfo[kcuf1] forward-char

bindkey $terminfo[kpp] beginning-of-buffer-or-history
bindkey $terminfo[knp] end-of-buffer-or-history

# Finally, make sure the terminal is in application mode, when zle is active.
# Only then are the values from $terminfo valid.

function zle-line-init() {
    printf '%s' $terminfo[smkx]
}
zle -N zle-line-init

function zle-line-finish() {
    printf '%s' $terminfo[rmkx]
}
zle -N zle-line-finish

# vi:ft=zsh

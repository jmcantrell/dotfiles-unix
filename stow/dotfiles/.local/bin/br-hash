#!/usr/bin/env python3

"""Rename files to hashes based on contents."""

import os, hashlib
from argparse import ArgumentParser

hashes = ['md5', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512']


def format_hash(fn, h):
    d = os.path.dirname(fn)
    ext = os.path.splitext(fn)[1]
    m = getattr(hashlib, h)()
    f = open(fn, 'rb')
    while True:
        data = f.read(8192)
        if not data:
            break
        m.update(data)
    h = m.hexdigest()
    return os.path.join(d, h + ext)


def parse_args():
    p = ArgumentParser(description=__doc__)
    p.add_argument(
        'files',
        nargs='*', metavar='file',
        help="file to rename"
    )
    p.add_argument(
        '-a', '--alg',
        default=hashes[0], metavar='hash', choices=hashes,
        help='use hash when renaming'
    )
    p.add_argument(
        '-l', '--list',
        action='store_true',
        help='list available algorithms (default is first)'
    )
    p.add_argument('-n', '--noop', action='store_true', help='dry run')
    return p.parse_args()


def main():
    args = parse_args()
    if args.list:
        print(os.linesep.join(hashes))
        return
    seen = []
    for fn in args.files:
        if os.path.isfile(fn):
            nf = format_hash(fn, args.alg)
            if nf not in seen:
                seen.append(nf)
            if fn != nf:
                print(nf)
                if not args.noop:
                    os.rename(fn, nf)


if __name__ == '__main__':
    main()
